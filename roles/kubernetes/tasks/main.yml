---
# tasks file for kubernetes
- name: Install kind when variable 'kubernetes_typ' is 'kind'
  when: kubernetes_type == 'kind'
  block:
    - name: Retrieve information from github api
      ansible.builtin.uri:
        url: https://api.github.com/repos/kubernetes-sigs/kind/releases/latest
        return_content: true
      register: kind_api

    - name: Compare to current kind version if exist
      ansi_colle.mods.cmp_pkg:
        command_name: kind
        desired_version: "{{ kind_api.json.tag_name[1:] }}"
      register: kind_cmp

    - name: Download executables for linux x64 system if update is required
      become: true
      when: (kind_cmp.rc == 2) or (kind_cmp.rc == 1)
      ansible.builtin.get_url:
        url: "{{ kind_api.json.assets[4].browser_download_url }}"
        dest: /usr/local/bin/kind
        mode: '0755'

    - name: Create directory for kind configuration
      become: true
      ansible.builtin.file:
        path: /usr/local/etc/kind/
        state: directory
        mode: '0755'

- name: Install and Update kubectl if needed
  vars:
    kubectl_link: https://dl.k8s.io/release
  block:
    - name: Get latest kubectl version
      ansible.builtin.uri:
        url: "{{ kubectl_link }}/stable.txt"
        return_content: true
      register: kubectl_output

    - name: Compare to current kind version if exist
      ansi_colle.mods.cmp_pkg:
        command_name: kubectl
        desired_version: "{{ kubectl_output.content }}"
        arg: 'version'
      register: kubectl_cmp

    - name: Download kubectl for linux if update is required
      when: (kubectl_cmp.rc == 2) or (kubectl_cmp.rc == 1)
      become: true
      vars:
        kubectl_linux_64: "{{ kubectl_output.content }}/bin/linux/amd64/kubectl"
      ansible.builtin.get_url:
        url: "{{ kubectl_link }}/{{ kubectl_linux_64 }}"
        dest: /usr/local/bin/kubectl
        mode: '0755'

- name: Install helm, kubernetes package manager
  become: true
  when: ansible_os_family == 'RedHat'
  ansible.builtin.dnf:
    name: helm
